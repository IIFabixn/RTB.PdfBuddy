@page "/editor"
@using RTB.BlazorUI.Extensions
@using Microsoft.AspNetCore.Components.Forms
@using RTB.BlazorUI.Models
@inject NavigationManager NavigationManager

<CollectionList Items="@Files" TItem="BrowserFileModel" Context="file">
    <ItemTemplate>
        @file.Name
    </ItemTemplate>
</CollectionList>

@code {
    [Parameter] public BrowserFileModel[] Files { get; set; } = [];

    protected override void OnInitialized()
    {
        try
        {
            var uri = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
            if (!string.IsNullOrWhiteSpace(uri))
            {
                var fileParams = NavigationManager.GetUriParams<BrowserFileModel[]>("files");
                Files = fileParams ?? Array.Empty<BrowserFileModel>();
                Console.WriteLine($"Files: {string.Join(", ", Files.Select(f => f.Name))}");
            }
            else
            {
                Console.WriteLine("URI is empty or invalid.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error parsing URI: {ex.Message}");
        }
    }
}